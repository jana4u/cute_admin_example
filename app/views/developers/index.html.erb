<div class="admin-container">
<h1><%= translate(:listing, :default => "Listing {{model}}", :model => Developer.human_name, :scope => [:railties, :scaffold]) %></h1>

<div class="admin-control">
  <div class="item-new"><%= link_to translate(:new_record, :default => "New {{model}}", :model => Developer.human_name, :scope => [:railties, :scaffold]), new_developer_path %></div>
</div>

<% content_for :pagination do -%>
<% if @search.page_count > 1 -%>
<%= pagination_links %>
<% end -%>
<% end -%>

<% form_for @search do |f| %>
<div class="admin-top">
<%= yield :pagination %>
</div>

<div class="admin-main">
<%= searchgasm_state %>
<table class="admin-table-list">
  <tr class="heading">

    <th class="<%= cute_admin_ordered_full_class(:first_name) %>"><%= order_by_link(:first_name, {:text => Developer.human_attribute_name("first_name")}) %></th>

    <th class="<%= cute_admin_ordered_full_class(:last_name) %>"><%= order_by_link(:last_name, {:text => Developer.human_attribute_name("last_name")}) %></th>

    <th class="<%= cute_admin_ordered_full_class(:born_on) %>"><%= order_by_link(:born_on, {:text => Developer.human_attribute_name("born_on")}) %></th>

    <th class="<%= cute_admin_ordered_full_class(:years_employed) %>"><%= order_by_link(:years_employed, {:text => Developer.human_attribute_name("years_employed")}) %></th>

    <th class="<%= cute_admin_ordered_full_class(:manager) %>"><%= order_by_link(:manager, {:text => Developer.human_attribute_name("manager")}) %></th>

    <th class="<%= cute_admin_ordered_full_class(:note) %>"><%= order_by_link(:note, {:text => Developer.human_attribute_name("note")}) %></th>

    <th class="<%= cute_admin_ordered_full_class({:company => :name}) %>"><%= order_by_link({:company => :name}, {:text => Company.human_name}) %></th>

    <th class="<%= cute_admin_ordered_full_class({:company => :name}) %>"><%= order_by_link({:company => :name}, {:text => "#{Company.human_name} &ndash; #{Company.human_attribute_name("name")}"}) %></th>

    <th class="<%= cute_admin_ordered_full_class({:company => {:country => :name}}) %>"><%= order_by_link({:company => {:country => :name}}, {:text => "#{Company.human_name} &ndash; #{Country.human_name}"}) %></th>

    <th class="<%= cute_admin_ordered_full_class({:company => :created_at}) %>"><%= order_by_link({:company => :created_at}, {:text => "#{Company.human_name} &ndash; #{Company.human_attribute_name("created_at")}"}) %></th>

    <th class="<%= cute_admin_ordered_full_class({:company => :updated_at}) %>"><%= order_by_link({:company => :updated_at}, {:text => "#{Company.human_name} &ndash; #{Company.human_attribute_name("updated_at")}"}) %></th>

    <th class="<%= cute_admin_ordered_full_class(:created_at) %>"><%= order_by_link(:created_at, {:text => Developer.human_attribute_name("created_at")}) %></th>

    <th class="<%= cute_admin_ordered_full_class(:updated_at) %>"><%= order_by_link(:updated_at, {:text => Developer.human_attribute_name("updated_at")}) %></th>

    <th colspan="4"><%= link_to translate(:default_view, :default => "Default view", :scope => [:railties, :scaffold]), developers_path %></th>
  </tr>

<% f.fields_for @search.conditions do |developers| -%>
  <tr class="filters">

    <td class="<%= cute_admin_ordered_full_class(:first_name) %>"><%= developers.text_field :first_name_contains %></td>

    <td class="<%= cute_admin_ordered_full_class(:last_name) %>"><%= developers.text_field :last_name_contains %></td>

    <td class="<%= cute_admin_ordered_full_class(:born_on) %>"><%= developers.text_field :born_on_contains %></td>

    <td class="<%= cute_admin_ordered_full_class(:years_employed) %>"><%= developers.text_field :years_employed_contains %></td>

    <td class="<%= cute_admin_ordered_full_class(:manager) %>"><%= developers.select :manager_equals, [[I18n.t(:all, :default => '[ all ]', :scope => [:railties, :scaffold]), nil], [nice_boolean(true), true], [nice_boolean(false), false]] %></td>

    <td class="<%= cute_admin_ordered_full_class(:note) %>"><%= developers.text_field :note_contains %></td>

    <td class="<%= cute_admin_ordered_full_class({:company => :name}) %>"><%= developers.select :company_id_equals, Company.for_select_with_all %></td>

    <td class="<%= cute_admin_ordered_full_class({:company => :name}) %>"><% developers.fields_for developers.object.company do |company| %><%= company.text_field :name_contains %><% end %></td>

    <td class="<%= cute_admin_ordered_full_class({:company => {:country => :name}}) %>"><% developers.fields_for developers.object.company do |company| %><%= company.select :country_id_equals, Country.for_select_with_all %><% end %></td>

    <td class="<%= cute_admin_ordered_full_class({:company => :created_at}) %>"><% developers.fields_for developers.object.company do |company| %><%= company.text_field :created_at_contains %><% end %></td>

    <td class="<%= cute_admin_ordered_full_class({:company => :updated_at}) %>"><% developers.fields_for developers.object.company do |company| %><%= company.text_field :updated_at_contains %><% end %></td>

    <td class="<%= cute_admin_ordered_full_class(:created_at) %>"><%= developers.text_field :created_at_contains %></td>

    <td class="<%= cute_admin_ordered_full_class(:updated_at) %>"><%= developers.text_field :updated_at_contains %></td>

    <td class="item-filter-button" colspan="4"><%= developers.submit translate(:filter, :default => 'Filter', :scope => [:railties, :scaffold]), :id => nil %></td>
  </tr>
<% end -%>

<% for developer in @developers %>
  <tr class="<%= cycle("light", "dark") %>">

    <td class="string-column<%= cute_admin_ordered_class(:first_name) %>"><%= h(developer.first_name) %></td>

    <td class="string-column<%= cute_admin_ordered_class(:last_name) %>"><%= h(developer.last_name) %></td>

    <td class="date-column<%= cute_admin_ordered_class(:born_on) %>"><%= developer.born_on %></td>

    <td class="integer-column<%= cute_admin_ordered_class(:years_employed) %>"><%= number_with_delimiter(developer.years_employed) %></td>

    <td class="boolean-column<%= cute_admin_ordered_class(:manager) %>"><%= nice_boolean(developer.manager) %></td>

    <td class="text-column<%= cute_admin_ordered_class(:note) %>"><%= h(developer.note) %></td>

    <td class="string-column<%= cute_admin_ordered_class({:company => :name}) %>"><%= h(developer.company.display_name) if developer.company %></td>

    <td class="string-column<%= cute_admin_ordered_class({:company => :name}) %>"><%= h(developer.company.name) if developer.company %></td>

    <td class="string-column<%= cute_admin_ordered_class({:company => {:country => :name}}) %>"><%= h(developer.company.country.display_name) if developer.company and developer.company.country %></td>

    <td class="datetime-column<%= cute_admin_ordered_class({:company => :created_at}) %>"><%= developer.company.created_at if developer.company %></td>

    <td class="datetime-column<%= cute_admin_ordered_class({:company => :updated_at}) %>"><%= developer.company.updated_at if developer.company %></td>

    <td class="datetime-column<%= cute_admin_ordered_class(:created_at) %>"><%= developer.created_at %></td>

    <td class="datetime-column<%= cute_admin_ordered_class(:updated_at) %>"><%= developer.updated_at %></td>

    <td class="item-show"><%= link_to translate(:show, :default => 'Show', :scope => [:railties, :scaffold]), developer %></td>
    <td class="item-edit"><%= link_to translate(:edit, :default => 'Edit', :scope => [:railties, :scaffold]), edit_developer_path(developer) %></td>
    <td class="item-destroy"><%= link_to translate(:destroy, :default => 'Destroy', :scope => [:railties, :scaffold]), developer, :confirm => translate(:destroy_confirmation, :default => 'Are you sure?', :record => developer.display_name, :scope => [:railties, :scaffold]), :method => :delete %></td>
  </tr>
<% end -%>
</table>
</div>

<div class="admin-bottom">
<%= yield :pagination %>
<%= translate(:per_page, :default => 'Per page', :scope => [:railties, :scaffold]) %>: <%= per_page_select %>
<%= translate(:total, :default => 'Total', :scope => [:railties, :scaffold]) %>: <%= @developers_count %>
</div>
<% end %>
</div>